{"ast":null,"code":"import { personRepo } from \"./Person.repo\";\nimport omit from \"lodash/omit\";\n\nclass PersonService {\n  fetchMyCourses(data) {\n    return personRepo.fetchMyCourses(data);\n  }\n\n  goProfile(id) {\n    return personRepo.goProfile(id);\n  }\n\n  fetchNotCompletedCourses() {\n    return personRepo.fetchNotCompletedCourses();\n  }\n\n  fetchCompletedCourses(id) {\n    return personRepo.fetchCompletedCourses(id);\n  }\n\n  fetchMyStudents() {\n    return personRepo.fetchMyStudents();\n  }\n\n  fetchAplicationRequests() {\n    return personRepo.fetchAplicationRequests();\n  }\n\n  resolveRequest(data) {\n    return personRepo.resolveRequest({\n      courseId: data.course_id,\n      data: omit(data, [\"course_id\"])\n    });\n  }\n\n  fetchNotRatedCourses(data) {\n    return personRepo.fetchNotRatedCourses(data);\n  }\n\n  completeCourse(data) {\n    return personRepo.completeCourse({\n      personId: data.personId,\n      data: omit(data, [\"personId\"])\n    });\n  }\n\n}\n\nexport const personService = new PersonService();","map":{"version":3,"names":["personRepo","omit","PersonService","fetchMyCourses","data","goProfile","id","fetchNotCompletedCourses","fetchCompletedCourses","fetchMyStudents","fetchAplicationRequests","resolveRequest","courseId","course_id","fetchNotRatedCourses","completeCourse","personId","personService"],"sources":["/Users/nebojsa/projects/MERN-academy/app/src/Modules/PersonModule/Person.service.ts"],"sourcesContent":["import { personRepo } from \"./Person.repo\";\nimport omit from \"lodash/omit\";\n\nclass PersonService {\n  fetchMyCourses(data: any) {\n    return personRepo.fetchMyCourses(data);\n  }\n\n  goProfile(id: any) {\n    return personRepo.goProfile(id);\n  }\n\n  fetchNotCompletedCourses() {\n    return personRepo.fetchNotCompletedCourses();\n  }\n\n  fetchCompletedCourses(id: number) {\n    return personRepo.fetchCompletedCourses(id);\n  }\n\n  fetchMyStudents() {\n    return personRepo.fetchMyStudents();\n  }\n\n  fetchAplicationRequests() {\n    return personRepo.fetchAplicationRequests();\n  }\n\n  resolveRequest(data: any) {\n    return personRepo.resolveRequest({\n      courseId: data.course_id,\n      data: omit(data, [\"course_id\"]),\n    });\n  }\n\n  fetchNotRatedCourses(data: any) {\n    return personRepo.fetchNotRatedCourses(data);\n  }\n\n  completeCourse(data: any) {\n    return personRepo.completeCourse({\n      personId: data.personId,\n      data: omit(data, [\"personId\"]),\n    });\n  }\n}\n\nexport const personService = new PersonService();\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,aAAN,CAAoB;EAClBC,cAAc,CAACC,IAAD,EAAY;IACxB,OAAOJ,UAAU,CAACG,cAAX,CAA0BC,IAA1B,CAAP;EACD;;EAEDC,SAAS,CAACC,EAAD,EAAU;IACjB,OAAON,UAAU,CAACK,SAAX,CAAqBC,EAArB,CAAP;EACD;;EAEDC,wBAAwB,GAAG;IACzB,OAAOP,UAAU,CAACO,wBAAX,EAAP;EACD;;EAEDC,qBAAqB,CAACF,EAAD,EAAa;IAChC,OAAON,UAAU,CAACQ,qBAAX,CAAiCF,EAAjC,CAAP;EACD;;EAEDG,eAAe,GAAG;IAChB,OAAOT,UAAU,CAACS,eAAX,EAAP;EACD;;EAEDC,uBAAuB,GAAG;IACxB,OAAOV,UAAU,CAACU,uBAAX,EAAP;EACD;;EAEDC,cAAc,CAACP,IAAD,EAAY;IACxB,OAAOJ,UAAU,CAACW,cAAX,CAA0B;MAC/BC,QAAQ,EAAER,IAAI,CAACS,SADgB;MAE/BT,IAAI,EAAEH,IAAI,CAACG,IAAD,EAAO,CAAC,WAAD,CAAP;IAFqB,CAA1B,CAAP;EAID;;EAEDU,oBAAoB,CAACV,IAAD,EAAY;IAC9B,OAAOJ,UAAU,CAACc,oBAAX,CAAgCV,IAAhC,CAAP;EACD;;EAEDW,cAAc,CAACX,IAAD,EAAY;IACxB,OAAOJ,UAAU,CAACe,cAAX,CAA0B;MAC/BC,QAAQ,EAAEZ,IAAI,CAACY,QADgB;MAE/BZ,IAAI,EAAEH,IAAI,CAACG,IAAD,EAAO,CAAC,UAAD,CAAP;IAFqB,CAA1B,CAAP;EAID;;AAzCiB;;AA4CpB,OAAO,MAAMa,aAAa,GAAG,IAAIf,aAAJ,EAAtB"},"metadata":{},"sourceType":"module"}