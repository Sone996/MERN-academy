{"ast":null,"code":"// STATE\n// END :: STATE\n// TYPES\nexport let ActionTypes; // END :: TYPES\n// ACTIONS\n\n(function (ActionTypes) {\n  ActionTypes[\"SET_LOADER\"] = \"SET_LOADER\";\n  ActionTypes[\"SET_ERROR\"] = \"SET_ERROR\";\n  ActionTypes[\"SET_SUCCESS\"] = \"SET_SUCCESS\";\n  ActionTypes[\"SET_USER\"] = \"SET_USER\";\n  ActionTypes[\"SET_PROFILE_DATA\"] = \"SET_PROFILE_DATA\";\n  ActionTypes[\"SET_ALL_COURSES\"] = \"SET_ALL_COURSES\";\n  ActionTypes[\"SET_MODAL\"] = \"SET_MODAL\";\n})(ActionTypes || (ActionTypes = {})); // END :: ACTIONS","map":{"version":3,"names":["ActionTypes"],"sources":["/Users/nebojsa/projects/MERN-academy/app/src/Context/Reducers/App/AppProvider.types.ts"],"sourcesContent":["// STATE\n\nexport interface IModal {\n    name: string,\n    status: boolean,\n    data: {} | null,\n}\nexport interface IAppState {\n    user: any,\n    loader: boolean,\n    error: string | null,\n    success: String | null,\n    profileData: {} | null,\n    allCourses: [] | {},\n    modal: IModal\n}\n// END :: STATE\n\n// TYPES\nexport enum ActionTypes {\n    SET_LOADER = \"SET_LOADER\",\n    SET_ERROR = \"SET_ERROR\",\n    SET_SUCCESS = \"SET_SUCCESS\",\n    SET_USER = \"SET_USER\",\n    SET_PROFILE_DATA = \"SET_PROFILE_DATA\",\n    SET_ALL_COURSES = \"SET_ALL_COURSES\", \n    SET_MODAL = \"SET_MODAL\",\n}\n// END :: TYPES\n\n// ACTIONS\nexport type Action =\n    { type: ActionTypes.SET_LOADER, payload: boolean } |\n    { type: ActionTypes.SET_USER, payload: any } |\n    { type: ActionTypes.SET_ERROR, payload: string } |\n    { type: ActionTypes.SET_SUCCESS, payload: string } |\n    { type: ActionTypes.SET_PROFILE_DATA, payload: Object } |\n    { type: ActionTypes.SET_ALL_COURSES, payload: Object } |\n    { type: ActionTypes.SET_MODAL, payload: any }\n// END :: ACTIONS"],"mappings":"AAAA;AAgBA;AAEA;AACA,WAAYA,WAAZ,C,CASA;AAEA;;WAXYA,W;EAAAA,W;EAAAA,W;EAAAA,W;EAAAA,W;EAAAA,W;EAAAA,W;EAAAA,W;GAAAA,W,KAAAA,W,SAoBZ"},"metadata":{},"sourceType":"module"}