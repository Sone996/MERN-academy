{"ast":null,"code":"// STATE\n// END :: STATE\n// TYPES\nexport let ActionTypes; // END :: TYPES\n// ACTIONS\n\n(function (ActionTypes) {\n  ActionTypes[\"SET_MY_COURSES\"] = \"SET_MY_COURSES\";\n  ActionTypes[\"SET_MY_STUDENTS\"] = \"SET_MY_STUDENTS\";\n  ActionTypes[\"SET_ACTIVE_APLICATONS\"] = \"SET_ACTIVE_APLICATONS\";\n  ActionTypes[\"SET_INACTIVE_APLICATONS\"] = \"SET_INACTIVE_APLICATONS\";\n  ActionTypes[\"SET_SINGLE_COURSE\"] = \"SET_SINGLE_COURSE\";\n  ActionTypes[\"SET_STUDENTS_ON_COURSE\"] = \"SET_STUDENTS_ON_COURSE\";\n})(ActionTypes || (ActionTypes = {})); // END :: ACTIONS","map":{"version":3,"names":["ActionTypes"],"sources":["/Users/nebojsa/projects/MERN-academy/app/src/Context/Reducers/Teacher/TeacherProvider.types.ts"],"sourcesContent":["// STATE\nexport interface ITeacherState {\n    myCourses: [],\n    myStudents: [],\n    activeAplications: [],\n    inactiveAplications: [],\n    singleCourse: {},\n    studentsOnCourse: [],\n}\n// END :: STATE\n\n// TYPES\nexport enum ActionTypes {\n    SET_MY_COURSES = \"SET_MY_COURSES\",\n    SET_MY_STUDENTS = \"SET_MY_STUDENTS\",\n    SET_ACTIVE_APLICATONS = \"SET_ACTIVE_APLICATONS\",\n    SET_INACTIVE_APLICATONS = \"SET_INACTIVE_APLICATONS\",\n    SET_SINGLE_COURSE = \"SET_SINGLE_COURSE\", \n    SET_STUDENTS_ON_COURSE = \"SET_STUDENTS_ON_COURSE\",\n}\n// END :: TYPES\n\n// ACTIONS\nexport type Action =\n    { type: ActionTypes.SET_MY_COURSES, payload: any } |\n    { type: ActionTypes.SET_MY_STUDENTS, payload: any } |\n    { type: ActionTypes.SET_ACTIVE_APLICATONS, payload: any } |\n    { type: ActionTypes.SET_INACTIVE_APLICATONS, payload: any } |\n    { type: ActionTypes.SET_SINGLE_COURSE, payload: any } |\n    { type: ActionTypes.SET_STUDENTS_ON_COURSE, payload: any }\n// END :: ACTIONS"],"mappings":"AAAA;AASA;AAEA;AACA,WAAYA,WAAZ,C,CAQA;AAEA;;WAVYA,W;EAAAA,W;EAAAA,W;EAAAA,W;EAAAA,W;EAAAA,W;EAAAA,W;GAAAA,W,KAAAA,W,SAkBZ"},"metadata":{},"sourceType":"module"}